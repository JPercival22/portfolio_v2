export function setupLazyLoading(){if(document.querySelector("#loadingOverlay"))return;const overlay=document.createElement("div");overlay.id="loadingOverlay",overlay.style.cssText="\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: #fff;\n    z-index: 10000;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column; /* Stack spinner and text vertically */\n  ";const spinner=document.createElement("div");spinner.classList.add("spinner");const loadingText=document.createElement("div");loadingText.classList.add("loading-text"),loadingText.textContent="Loading...",overlay.appendChild(spinner),overlay.appendChild(loadingText),document.body.appendChild(overlay);const sections=document.querySelectorAll("section");sections.forEach((section=>{section.style.visibility="hidden",section.classList.add("hidden")})),["click","keydown"].forEach((eventType=>window.addEventListener(eventType,(()=>{revealAboveTheFold(sections),removeOverlay(overlay)})))),setTimeout((()=>{revealAboveTheFold(sections),removeOverlay(overlay)}),4e3);const observer=new IntersectionObserver((entries=>{entries.forEach((entry=>{if(entry.isIntersecting){const target=entry.target;target.style.visibility="visible",target.classList.remove("hidden"),observer.unobserve(target)}}))}));sections.forEach((section=>observer.observe(section)))}function revealAboveTheFold(sections){sections.forEach((section=>{isAboveTheFold(section)&&(section.style.visibility="visible",section.classList.remove("hidden"))}))}function isAboveTheFold(element){const rect=element.getBoundingClientRect();return rect.top>=0&&rect.bottom<=window.innerHeight}function removeOverlay(overlay){overlay&&(overlay.style.display="none")}