import{initCarousel}from"./carousel.min.mjs";import{setupLazyLoading}from"./lazyLoad.min.mjs";import"./mainNavShadow.min.mjs";async function addMainFunctionality(){try{const openSidebarBtn=document.querySelector(".open-sidebar-btn"),closeSidebarBtn=document.querySelector(".close-btn");openSidebarBtn&&openSidebarBtn.addEventListener("click",(async()=>{const{toggleSidebar:toggleSidebar}=await import("./sideBarModule.min.mjs");toggleSidebar()})),closeSidebarBtn&&closeSidebarBtn.addEventListener("click",(async()=>{const{toggleSidebar:toggleSidebar}=await import("./sideBarModule.min.mjs");toggleSidebar()}));const menuToggle=document.querySelector(".menu-toggle");if(menuToggle){const{addToggleListener:addToggleListener}=await import("./menuModule.min.mjs");addToggleListener(menuToggle)}const{initReadMore:initReadMore}=await import("./readMore.min.mjs");initReadMore();const{scrollHighlight:scrollHighlight}=await import("./scrollHighlight.min.mjs");scrollHighlight();const{initializeTabModules:initializeTabModules}=await import("./tabModule.min.mjs");initializeTabModules();const{initLightboxFunctionality:initLightboxFunctionality}=await import("./lightboxModule.min.mjs");initLightboxFunctionality();const{closeSidebarOnLinkClick:closeSidebarOnLinkClick}=await import("./sideBarModule.min.mjs");closeSidebarOnLinkClick();const{toggleScrolledClass:toggleScrolledClass}=await import("./scrollButton.min.mjs");toggleScrolledClass();const{initializeFormFunctionality:initializeFormFunctionality}=await import("./formModule.min.mjs");initializeFormFunctionality();const{initAccordion:initAccordion}=await import("./accordion.min.mjs");initAccordion();document.querySelectorAll("[data-carousel]").forEach(((carousel,index)=>{const carouselId=carousel.dataset.carousel;initCarousel(carouselId,`carouselTrack_${index}`,`prevButton_${index}`,`nextButton_${index}`,`pagination_${index}`)}))}catch(error){console.error("Error adding main functionality:",error)}}console.log("Calling lazy loading setup..."),setupLazyLoading(),document.addEventListener("DOMContentLoaded",(async()=>{try{console.log("DOM fully loaded. Initialising scripts..."),setupLazyLoading(),console.log("Main functionality initialised."),await addMainFunctionality(),console.log("Main functionality initialised.")}catch(error){console.error("Error on DOMContentLoaded:",error)}}));